#+title: A Deep-Learning Approach to Breast Cancer Screening from Mammography Images

* Usage & Configuration

** On Host Machine

- Install [[https://python-poetry.org/docs/#installation][Poetry]] in user-space.
- move to project's root and install project with:

#+begin_src shell
poetry install
#+end_src

This will look for an existing and activated virtual environment, and create one
in current directory if it does not exist.

We make available a serie of CLI endpoints to execute the different phases of
our pipeline. The root endpoint is documented at:

#+begin_src shell
python hmtest/main.py --help
#+end_src

*** Selecting Series and Merging Annotations

We provide a base meta-data file that contains references to the original CMMD dataset at
~assets/meta.csv~.
Remove rows from this file prior to running the next commands to discard
patients.

First, we merge our base meta-data file with annotations with:

#+begin_src shell
python hmtest/main.py cmmd merge-meta-and-annotations assets/meta.csv assets/annotations.csv <data-dir>/meta-annotated.csv
#+end_src

*** Downloading Raw-data

The raw DICOM files are publicly available on ~cancerimagingarchive.net~.
We provide a routine to download these. We recommend setting ~n-threads~
to >16 to accelerate download time.

#+begin_src shell
python hmtest/main.py cmmd fetch-raw-data -w <n-threads> <data-dir>/meta-annotated.csv <data-dir>/dicom
#+end_src

*** Parse DICOM series
Next, we parse each dicom file to obtain some relevant meta-data:

#+begin_src shell
python hmtest/main.py cmmd build-per-image-meta <data-dir>/meta-annotated.csv <data-dir>/meta-images.csv
#+end_src

*** Convert images

Last, we convert each image to 8-bit in PNG format:

#+begin_src shell
python hmtest/main.py cmmd dicom-to-png <data-dir>/meta-images.csv <data-dir>/dicom <data-dir>/png
#+end_src

** Using Docker and Make

We provide a ~Dockerfile~ along with a ~Makefile~ to facilitate reproducibility and
abstract-away some pipeline steps.

Prior to run targets, you may setup environment variables:
- ~HMTEST_RUN_DIR~: Where model weights and intermediate validation data will be stored.
- ~HMTEST_DATA_DIR~: Where raw-data and meta-data are stored.

If not set, these directories will be automatically created in project's root.

Finally, you may run the data fetching pipeline with

#+begin_src sh
make ml-splitted-dataset
#+end_src

* Notes

https://stackoverflow.com/questions/25185405/using-gpu-from-a-docker-container

** Preprocessing as described in Walsh et. al 2023
- Triangle thresholding method
- https://scikit-image.org/docs/stable/auto_examples/segmentation/plot_label.html
- Flip images of right breasts so that all breasts are located at the left side of
        the images.
- The height is cropped to the size of the breast, and re-sized to 2048 pixels.
- The aspect ratio is maintained between the height and width, but the right side of the
        image was padded with zero-intensity pixels to give a square 2048 × 2048 image.
- We applied histogram normalisation to the pixels’ intensities, enhancing the contrast of the
images, and we scaled the values to the range ∈ [0, 1].


** Methods
- /Multi-view classification with convolutional neural networks/
- /High-Resolution Breast Cancer Screening with Multi-View Deep Convolutional Neural Networks/
  - Architecture tailored for high resolution (downsampling hurts!)
  - Average features of each view before last fully-connected layer


** Baselines:
- /A Comparison of Techniques for Class Imbalance in Deep Learning Classification of Breast Cancer/
- /Deep Learning in Breast Cancer Imaging: A Decade of Progress and Future Directions/
- /Attention-Based Deep Learning System for Classification of Breast Lesions—Multimodal, Weakly Supervised Approach/

** TODO
- TODO: Perform over-sampling of benignant class as in /A Comparison of Techniques for Class Imbalance in Deep Learning Classification of Breast Cancer/
- TODO: Explain all steps included in Makefile in README for clarity
- TODO: Set permission of files generated from docker container. They are now ~root:root~

** Questions / Next steps
- /The result of the experiments shall be reusable and sharable metrics/: Is this a typo? Does this simply means to generate a predictions on the test set and distribute these as a csv file?
- /We might not need or be able to download the whole dataset so your code should be allow to process a portion of it./
- Investigate on effect of adding classification task on type of abnormality.
- /You are expected to use a code repository (private gitlab or github repository is fine) and commit the code carefully./
